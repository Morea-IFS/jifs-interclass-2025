name: Main Worflow Pipeline
run-name: ${{ github.actor }} Test Code  ðŸš€
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Testing-Deps:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11.0, 3.11.5, 3.12.0]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Getting .env file
      run: |
        wget https://pastebin.com/raw/6Z7HS1x9 -O .env

    - name: Run Django Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test
        
  Testing-Migrations:
    runs-on: ubuntu-latest
    needs: Testing-Deps
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11.0, 3.11.5, 3.12.0]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Getting .env file
      run: |
        wget https://pastebin.com/raw/6Z7HS1x9 -O .env

    - name: Run Django Migrations
      run: |
        python manage.py migrate
  
  DeployDev:
    name: Deploy to Development
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: Testing-Migrations
    environment: 
        name: development
        url: 'http://dev.myapp.com'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H your-server.com >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh user@your-server.com << 'EOF'
          cd /path/to/your/application
          git pull origin main
          source /path/to/your/venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          systemctl restart your-app-service
          EOF
      - name: Set up Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

     

  DeployStaging:
    name: Deploy to Staging 
    if: github.event.ref == 'refs/heads/main'
    needs: [Testing-Migrations]
    runs-on: ubuntu-latest
    environment: 
      name: staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
            
  DeployProd:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: 'http://www.myapp.com'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci    

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }} << 'EOF'
          cd ${{ secrets.INSIDE_PROJECT_DIR }}
          git pull origin main
          source ${{ secrets.INSIDE_PROJECT_DIR }}${{ secrets.INSIDE_PROJECT_ENV }}
          pip install -r requirements.txt
          python manage.py migrate
          systemctl restart jiifs
          EOF
