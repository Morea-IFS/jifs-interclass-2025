# Generated by Django 5.1.3 on 2025-06-23 12:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='photos_config/')),
                ('status', models.IntegerField(choices=[(0, 'Em uso'), (1, 'Nenhum')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Bolletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, max_length=200, null=True)),
                ('qrcode', models.ImageField(blank=True, default='defaults/qrcode.png', null=True, upload_to='photos_config/')),
                ('areasup', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.IntegerField(choices=[(0, 'Futsal'), (1, 'Voleibol'), (2, 'Voleibol sentado'), (3, 'Handebol'), (4, 'Xadrez'), (5, 'Tênis de mesa'), (6, '100 M'), (7, 'Salto em distância'), (8, 'Lançamento de dardo'), (9, 'Arremesso de peso')])),
                ('status', models.IntegerField(choices=[(0, 'Em breve'), (1, 'Acontecendo'), (2, 'Finalizada'), (3, 'Cancelada'), (4, 'Pausada'), (5, 'Nenhum')], default=0)),
                ('time_start', models.TimeField(blank=True, null=True)),
                ('time_end', models.TimeField(blank=True, null=True)),
                ('sexo', models.IntegerField(blank=True, choices=[(0, 'Masculino'), (1, 'Feminino'), (2, 'Misto')], default=2)),
                ('add', models.TimeField(blank=True, null=True)),
                ('time_match', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings_access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='photos_config/')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('photo', models.ImageField(blank=True, default='defaults/team.png', null=True, upload_to='logo_team/')),
                ('hexcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('campus', models.IntegerField(choices=[(0, 'Aracaju'), (1, 'Estância'), (2, 'Glória'), (3, 'Itabaiana'), (4, 'Lagarto'), (5, 'Poço Redondo'), (6, 'Propriá'), (7, 'São Cristovão'), (8, 'Socorro'), (9, 'Tobias Barreto'), (10, 'Reitoria')], default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Volley_match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Em breve'), (1, 'Acontecendo'), (2, 'Finalizada'), (3, 'Cancelada'), (4, 'Pausada'), (5, 'Nenhum')], default=5)),
                ('sets_team_a', models.IntegerField(default=0)),
                ('sets_team_b', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('campus', models.IntegerField(blank=True, choices=[(0, 'Aracaju'), (1, 'Estância'), (2, 'Glória'), (3, 'Itabaiana'), (4, 'Lagarto'), (5, 'Poço Redondo'), (6, 'Propriá'), (7, 'São Cristovão'), (8, 'Socorro'), (9, 'Tobias Barreto'), (10, 'Reitoria')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('file', models.FileField(blank=True, upload_to='attachments/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('file', models.ImageField(blank=True, upload_to='badge/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('file', models.ImageField(blank=True, upload_to='certificate/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('details', models.CharField(max_length=200)),
                ('datetime', models.TimeField(auto_now_add=True)),
                ('match', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.match')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('instagram', models.CharField(blank=True, max_length=100)),
                ('photo', models.ImageField(blank=True, default='defaults/person.png', upload_to='photo_player/')),
                ('bulletin', models.FileField(upload_to='bulletins/')),
                ('rg', models.FileField(upload_to='rg/')),
                ('sexo', models.IntegerField(choices=[(0, 'Masculino'), (1, 'Feminino'), (2, 'Misto')], default=2)),
                ('campus', models.IntegerField(choices=[(0, 'Aracaju'), (1, 'Estância'), (2, 'Glória'), (3, 'Itabaiana'), (4, 'Lagarto'), (5, 'Poço Redondo'), (6, 'Propriá'), (7, 'São Cristovão'), (8, 'Socorro'), (9, 'Tobias Barreto'), (10, 'Reitoria')], default=10)),
                ('registration', models.CharField(default='0000000000', max_length=15)),
                ('cpf', models.CharField(default='00000000000', max_length=11)),
                ('date_nasc', models.DateField(default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='mvp_player_player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.player'),
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_types', models.IntegerField(choices=[(0, 'Gol'), (1, 'Ponto'), (2, 'Ace'), (3, 'Nenhum')], default=3)),
                ('time', models.TimeField(auto_now_add=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.player')),
            ],
        ),
        migrations.CreateModel(
            name='Assistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.player')),
                ('assis_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.point')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(max_length=500)),
                ('contend', models.CharField(max_length=1500)),
                ('bolletin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.bolletin')),
            ],
        ),
        migrations.CreateModel(
            name='Statement_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.statement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='Winner_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.team'),
        ),
        migrations.CreateModel(
            name='Team_match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='app.match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.team')),
            ],
        ),
        migrations.AddField(
            model_name='point',
            name='team_match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.team_match'),
        ),
        migrations.CreateModel(
            name='Player_match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_number', models.IntegerField(blank=True, default=0, null=True)),
                ('activity', models.IntegerField(choices=[(0, 'Titular'), (1, 'Reserva'), (2, 'Nenhum')], default=2)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.player')),
                ('team_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.team_match')),
            ],
        ),
        migrations.CreateModel(
            name='Penalties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_penalties', models.IntegerField(choices=[(0, 'Cartão Vermelho'), (1, 'Cartão Amarelo'), (2, 'lack'), (3, 'Nenhum')], default=3)),
                ('time', models.TimeField(auto_now_add=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.player')),
                ('team_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.team_match')),
            ],
        ),
        migrations.CreateModel(
            name='Team_sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.IntegerField(choices=[(0, 'Futsal'), (1, 'Voleibol'), (2, 'Voleibol sentado'), (3, 'Handebol'), (4, 'Xadrez'), (5, 'Tênis de mesa'), (6, '100 M'), (7, 'Salto em distância'), (8, 'Lançamento de dardo'), (9, 'Arremesso de peso')])),
                ('sexo', models.IntegerField(choices=[(0, 'Masculino'), (1, 'Feminino'), (2, 'Misto')])),
                ('status', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.team')),
            ],
        ),
        migrations.CreateModel(
            name='Player_team_sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.player')),
                ('team_sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='app.team_sport')),
            ],
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('siape', models.CharField(blank=True, max_length=100)),
                ('photo', models.ImageField(blank=True, default='defaults/person.png', upload_to='photo_technician/')),
                ('campus', models.IntegerField(choices=[(0, 'Aracaju'), (1, 'Estância'), (2, 'Glória'), (3, 'Itabaiana'), (4, 'Lagarto'), (5, 'Poço Redondo'), (6, 'Propriá'), (7, 'São Cristovão'), (8, 'Socorro'), (9, 'Tobias Barreto'), (10, 'Reitoria')], default=10)),
                ('sexo', models.IntegerField(choices=[(0, 'Masculino'), (1, 'Feminino'), (2, 'Misto')], default=2)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Terms_Use',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to='document_boss/')),
                ('photo', models.FileField(blank=True, null=True, upload_to='photo_boss/')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('siape', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('accepted', models.BooleanField(default=False)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Terms_Use',
                'verbose_name_plural': 'Terms_uses',
            },
        ),
        migrations.CreateModel(
            name='Time_pause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_pause', models.TimeField()),
                ('end_pause', models.TimeField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.match')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='volley_match',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='app.volley_match'),
        ),
        migrations.CreateModel(
            name='Voluntary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, default='defaults/person.png', upload_to='photo_voluntary/')),
                ('campus', models.IntegerField(choices=[(0, 'Aracaju'), (1, 'Estância'), (2, 'Glória'), (3, 'Itabaiana'), (4, 'Lagarto'), (5, 'Poço Redondo'), (6, 'Propriá'), (7, 'São Cristovão'), (8, 'Socorro'), (9, 'Tobias Barreto'), (10, 'Reitoria')], default=10)),
                ('registration', models.CharField(default='00000000000', max_length=11)),
                ('type_voluntary', models.IntegerField(choices=[(0, 'Voluntário'), (1, 'Técnico de modalidade esportiva'), (2, 'Apoio'), (3, 'Estagiário'), (4, 'Chefe de delegação')], default=0)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
